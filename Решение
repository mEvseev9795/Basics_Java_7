import java.util.Scanner;
import java.util.Random;

public class Main {
    public static final int SIZE = 8;

    public static void main(String[] args) {
        int[][] colors = new int[SIZE][SIZE];
        int[][] rotatedColors = new int[SIZE][SIZE];
        Random random = new Random();
        for (int i = 0; i < SIZE; i++) {
            for (int j = 0; j < SIZE; j++) {
                colors[i][j] = random.nextInt(256);
            }
        }
        System.out.println("Введите угол поворота матрицы (90-180-270): ");
        System.out.println("Исходная матрица: ");
        printMatrix(colors, SIZE);
        while (true) {
            choiceMatrix(colors, rotatedColors);
            System.out.println("Повернутая матрица: ");
            printMatrix(rotatedColors, SIZE);
        }
    }

    public static void printMatrix(int[][] colors, int SIZE) {
        for (int i = 0; i < SIZE; i++) {
            for (int j = 0; j < SIZE; j++) {
                System.out.format("%4d", colors[i][j]);
            }
            System.out.println();
        }
    }

    public static void choiceMatrix(int[][] colors, int[][] rotatedColors) {
        Scanner scanner = new Scanner(System.in);
        int operation = scanner.nextInt();
        switch (operation) {
            case 90:
                for (int i = 0; i < SIZE; i++) {
                    for (int j = 0; j < SIZE; j++) {
                        rotatedColors[j][SIZE - i - 1] = colors[i][j];
                    }
                }
                break;
            case 180:
                for (int i = 0; i < SIZE; i++) {
                    for (int j = 0; j < SIZE; j++) {
                        rotatedColors[SIZE - i - 1][SIZE - j - 1] = colors[i][j];
                    }
                }
                break;
            case 270:
                for (int i = 0; i < SIZE; i++) {
                    for (int j = 0; j < SIZE; j++) {
                        rotatedColors[SIZE - j - 1][i] = colors[i][j];
                    }
                }
                break;
        }
    }
}
